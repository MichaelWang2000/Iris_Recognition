# Form implementation generated from reading ui file 'user_checkInOutInformation.ui'
#
# Created by: PyQt6 UI code generator 6.5.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import datetime
import time
from ctypes.wintypes import RGB

from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtGui import QBrush, QColor
from PyQt6.QtWidgets import QTableWidgetItem, QTextEdit

from Database.testconnection import getDatabase


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(511, 379)
        self.tableWidget = QtWidgets.QTableWidget(parent=Dialog)
        self.tableWidget.setGeometry(QtCore.QRect(40, 90, 431, 251))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        self.label = QtWidgets.QLabel(parent=Dialog)
        self.label.setGeometry(QtCore.QRect(40, 50, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label.setFont(font)
        self.label.setObjectName("label")

        self.tableRow = self.getDataNumber()

        # print(self.studentID)
        self.getStudentNmae()
        self.tableWidget.setRowCount(self.tableRow)
        self.tableWidget.setColumnCount(3)
        # 设置表格字段
        self.tableWidget.setHorizontalHeaderLabels(
            ['时间', '操作','是否异常'])

        self.getDataResult()
        # 循环添加数据
        for Item in range(0, self.tableRow):
            newItem = QTableWidgetItem(repr(self.result[Item][2]))
            self.tableWidget.setItem(Item, 0, newItem)




            if self.result[Item][3] == '1':
                newItem = QTableWidgetItem('登入')
            else:
                newItem = QTableWidgetItem('登出')
            self.tableWidget.setItem(Item, 1, newItem)

            test = time.strptime(self.result[Item][2], '%Y-%m-%d %H:%M:%S')
            if test.tm_hour <= 8 or test.tm_hour >= 21 :
                newItem = QTableWidgetItem('异常')
                self.tableWidget.setItem(Item, 2, newItem)
                self.tableWidget.item(Item, 0).setForeground(QBrush(QColor(255, 0, 0)))
                self.tableWidget.item(Item, 1).setForeground(QBrush(QColor(255, 0, 0)))
                self.tableWidget.item(Item, 2).setForeground(QBrush(QColor(255, 0, 0)))
            else:
                newItem = QTableWidgetItem('正常')
                self.tableWidget.setItem(Item, 2, newItem)


        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

        self.tableWidget.setColumnWidth(0, 230)
        self.tableWidget.setEditTriggers(QtWidgets.QAbstractItemView.EditTrigger.NoEditTriggers)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label.setText(_translate("Dialog", "会员"+self.studentname+"登入登出记录："))

    # 获取有多少行数据
    def getDataNumber(self):
        db = getDatabase()
        cursor = db.cursor()  # 使用cursor()方法获取数据库操作游标
        cursor.execute("select * from Time where StudentID ="+self.studentID+"")  # 执行SQL语句
        row = cursor.rowcount  # 获取记录个数，用于设置表格的行数
        # 修改
        db.commit()
        # 关闭游标
        cursor.close()
        return row

    # 获取数据
    def getDataResult(self):
        db = getDatabase()
        cursor = db.cursor()  # 使用cursor()方法获取数据库操作游标
        cursor.execute("select * from Time where StudentID ="+self.studentID+"")  # 执行SQL语句
        result = cursor.fetchall()
        self.result = result
        # print(result)
        # 修改
        db.commit()
        # 关闭游标
        cursor.close()

    # 获取当前学号
    def getStudentID(self, ID):
        self.studentID = ID

    # 获取当前会员姓名
    def getStudentNmae(self):
        db = getDatabase()
        cursor = db.cursor()  # 使用cursor()方法获取数据库操作游标
        cursor.execute("select Name from user where StudentID =" +self.studentID+"" )  # 执行SQL语句
        result = cursor.fetchall()
        self.studentname = result[0][0]
        # 修改
        db.commit()
        # 关闭游标
        cursor.close()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec())
